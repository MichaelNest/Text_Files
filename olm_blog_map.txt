

#1_ Прописываем наше созданное приложение blog в settings.py/INSTALLED_APPS

#2_ С помощью метода include переадресуем c main_blog/urls.py на файл blog/urls.py

#3_ Создаем файд blog/urls.py и заполняем его - указываем что надо выполнить метод views.posts_list

#5_ Возвращаем на исполнение метод render и указываем на наш шаблон index.html
#6_ Вводим переменную context, в которой можем вносить данные в виде словаря

<!--7_ так передаем шаблону данные из view.py из словаря context метода posts_list-->

<!--8_ создаем  общий файл-шаблон blog/templates/blog/base_blog.html-->

<!--9_ Идем на сайт Bootstrap и забираем оттуда код шаблона из раздела Getting Started/CSS-->

<!--10_ Берем из Bootstrap какой небудь код Navbar и вставляем в body-->

<!--11_ Размечаем блоки -->

<!--12_ Делаем росширение общего шаблона-->

<!--13_ Переносим все в этот основной шаблон из base_blog.html-->

<!-- 14_ Росширяет шаблон base.html-->

#15_ Прописываем путь до папки templates, чтоб наш общий шаблон base.html могла находить система

#16_ Создаем класс модели Post

# 17_Создаем поля для нашей модели Posts

#18_Создаем параметр - удобночитаемый урл,

# 19_Создаем параметр для тела текста

# 20_ Создаем параметр даты публикации

# 21_ Создаем миграции - переносим нашу модель Post в базу данных (находясь в виртуальном окружении):

# 22_ Заходим в консоль Django чтоб через нее создавать обьекты модели Post в базе данных - создавать посты и управлять ими

# 23_Создаем переменную post - список постов из нашей модели

# 24_Заменяем {'names': names} на {'posts': posts}

<!-- 25_Заменяем /{/% for name in names /%/} и /{/{ name /}/} на /{/% for post in posts /%/} и /{/{ post.title /}/}-->

<!-- 26_Берем из Bootstrap/Card/Header and footer код и вставляем в него post.data_pub, post.title и post.body-->

<!-- 27_post.body|truncatewords:22 - это фильтр для шаблонов из документации django - означает что мы ограничиваем тексе 22-мя словами-->

# 28_Создаем имя для данного path(), чтоб по этому имени можно было б ссылаться в шаблонах html

# 29_ Создаем новый урл-шаблон. <str:slug> - это именнованная группа символов - в данном случае это slug типа string

<!-- 30_в параметр href записываем ссылку через имя параметра path() файла blog/urls.py-->

<!--31_Создаем шаблон для перехода на просмотр поста по кнопке Read-->

<!-- 32_Подставляем в кнопку ссылку для перехода url 'post_detail_url' slug=post.slug-->

# 33_ Создаем метод для перехода по кнопке Read

<!-- 34_ Для получения ссылки вызываем метод post.get_absolute_url , который мы написали в blog/models.py-->
































